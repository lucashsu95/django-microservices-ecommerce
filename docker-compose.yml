services:
  # 商品服務資料庫
  product-db:
    image: postgres:15
    environment:
      POSTGRES_DB: product_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - product_db_data:/var/lib/postgresql/data
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # 訂單服務資料庫
  order-db:
    image: postgres:15
    environment:
      POSTGRES_DB: order_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - order_db_data:/var/lib/postgresql/data
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # 商品微服務
  product-service:
    build:
      context: .
      dockerfile: ./product_service/Dockerfile
    ports:
      - "8001:8000"
    environment:
      - DEBUG=True
      - DB_HOST=product-db
      - DB_NAME=product_db
      - DB_USER=postgres
      - DB_PASSWORD=password
    depends_on:
      product-db:
        condition: service_healthy
    volumes:
      - ./product_service:/app
      - ./shared-models:/app/shared-models
    networks:
      - microservices-network
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  # 訂單微服務
  order-service:
    build:
      context: .
      dockerfile: ./order_service/Dockerfile
    ports:
      - "8002:8000"
    environment:
      - DEBUG=True
      - DB_HOST=order-db
      - DB_NAME=order_db
      - DB_USER=postgres
      - DB_PASSWORD=password
      - PRODUCT_SERVICE_URL=http://product-service:8000
    depends_on:
      order-db:
        condition: service_healthy
      product-service:
        condition: service_started
    volumes:
      - ./order_service:/app
      - ./shared-models:/app/shared-models
    networks:
      - microservices-network
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

volumes:
  product_db_data:
  order_db_data:

networks:
  microservices-network:
    driver: bridge